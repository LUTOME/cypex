# 🧙🏻‍♂️BIENVENIDO A LOS PIPELINES DE CONTINUOUS INTEGRATION DE "ARI - Hija de Aurora"!
# 🤖Este Pipeline de CI se activa al hacer MERGE a la rama "QA" o "MAIN",
# 🧪Consiste en ejecutar TODOS los tests del Repo e importar los resultados a Jira!🚀
# 👩🏻‍🔬Este Pipeline de CI NO DEBE EDITARSE sin permiso del QA Lead.

name: 🤖CI run Regression in QA🧪
run-name: ${{github.actor}}👨🏻‍🔬 run Regression in ${{github.ref_name}}

on:
  push:
    branches:
    - QA

jobs:
  RegressionTests:
    name: regression
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: ['chrome', 'firefox', 'edge'] #? Runs tests in 3 different browsers

    steps:
    - name: 💻Checkout
      uses: actions/checkout@v3

    - name: 💿Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: 💿Yarn Setup
      uses: DerYeger/yarn-setup-action@master
      with:
        node-version: 16

    - name: 🧬Install All Dependencies
      run: |
        yarn


    - name: 🧪Cypress E2E Regression Test on ${{ matrix.browser }}
      uses: cypress-io/github-action@v4
      with:
        browser: ${{ matrix.browser }}
        command: | #!NO EDITAR. Es para correr todas las pruebas del Repo.
          yarn regression:${{ matrix.browser }}

    - name: 📬Generate JUnit/Mocha Report for ${{ matrix.browser }}
      if: always()
      run: |
        yarn ${{ matrix.browser }}:report

    - name: 📦️ Set testExecKey for Jira XRay
      run: |
        if [[ "${{ matrix.browser }}" == "chrome" ]]; then
          echo "TXID=GX3-1526" >> $GITHUB_ENV
        elif [[ "${{ matrix.browser }}" == "firefox" ]]; then
          echo "TXID=GX3-1527" >> $GITHUB_ENV
        elif [[ "${{ matrix.browser }}" == "edge" ]]; then
          echo "TXID=GX3-1528" >> $GITHUB_ENV
        fi
    - name: 📦️ Use testExecKey
      run: echo "The testExecKey is ${{ env.TXID }}"

    - name: ✅Import Test Results to Xray Test Execution -- ${{ env.TXID }} (${{ matrix.browser }})
      if: always()
      uses: mikepenz/xray-action@v2
      with: #EDITAR AQUÍ EL TEST EXECUTION DE JIRA DONDE SE CARGARÁN LOS TESTS:
        username: ${{secrets.XRAY_CLIENT_ID}}
        password: ${{secrets.XRAY_CLIENT_SECRET}}
        testFormat: 'junit'
        testPaths: 'cypress/tests_results/junit/${{ matrix.browser }}_regression_report.xml'
        testExecKey: ${{ env.TXID }} #? this is the Regression Test Plan TX
        projectKey: 'GX3' #? this is the UPEX GALAXY LEVEL 

    - name: 📊Upload Artifact ${{ matrix.browser }} Mochawesome Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: regression-${{ matrix.browser }}-mocha-report
        path: cypress/tests_reports/${{ matrix.browser }}_mocha_report
        retention-days: 15

  AriSlackNotification:
    needs: [RegressionTests]
    runs-on: ubuntu-latest
    steps:
    - name: 🔔Slack Notification of Done
      if: always()
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Ari✨
        SLACK_MESSAGE: ':test_tube: CYPRESS-BLACKHOLE: REGRESSION REPORT IMPORTED TO JIRA :rocket:'
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://i.imgur.com/q9kvQCp_d.webp?maxwidth=760&fidelity=grand

  Create-PullRequest:
    needs: [RegressionTests, AriSlackNotification]
    runs-on: ubuntu-latest
    steps:
    - name: Create Pull Request
      uses: actions/github-script@v6
      with:
        script: |
          const { repo, owner } = context.repo;
          const result = await github.rest.pulls.create({
          title: '✅[QA REGRESSION PASSED]: Ready to Merge into MAIN',
          owner,
          repo,
          head: '${{ github.ref_name }}',
          base: 'main',
          body: [
              'Update branch by Automation Pipeline',
              '- (CI) Build Test Execution is Done✅',
              '- (CI) Integration-Regression Report is Done✅',
              '- (TestResults) No Conflicts in Repo Branch QA✅ '
          ].join('\n')
          });
          github.rest.issues.addLabels({
          owner,
          repo,
          issue_number: result.data.number,
          labels: ['autoPullRequest']
          });

  AutoMerge-into-Main:
    needs: [Create-PullRequest]
    runs-on: ubuntu-latest
    steps:
    - name: 🧬Merge QA -> MAIN
      uses: devmasx/merge-branch@master
      with:
        type: now
        label_name: 'autoPullRequest'
        target_branch: 'main' #ESTE ES LA RAMA PRINCIPAL DEL REPOSITORIO PRESENTE
        github_token: ${{ github.token }}
